apiVersion: v1
kind: Namespace
metadata:
  name: gamedo
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
  namespace: gamedo
data:
  nginx.conf: |
    worker_processes auto;
    pid /run/nginx.pid;
    include /usr/share/nginx/modules/*.conf;
    events {
        worker_connections 1024;
    }
    http {
        log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                          '$status $body_bytes_sent "$http_referer" '
                          '"$http_user_agent" "$http_x_forwarded_for"';
        sendfile            on;
        tcp_nopush          on;
        tcp_nodelay         on;
        keepalive_timeout   120;
        client_max_body_size 128M;
        types_hash_max_size 2048;
        include             /etc/nginx/mime.types;
        default_type        application/octet-stream;
        server_tokens off;

        server {
            listen       8092 default_server;
            listen       [::]:8092 default_server;
            server_name  _;
            client_max_body_size 128M;
            root /var/www/html/public;

            index index.php index.html;
            error_log  /dev/stdout;
            access_log /dev/stdout;

            location ~ [^/]\.php(/|$) {
                fastcgi_index index.php;
                try_files $uri =404;
                fastcgi_split_path_info ^(.+?\.php)(/.*)$;
                fastcgi_param REQUEST_URI $request_uri;
                fastcgi_param SCRIPT_FILENAME  $document_root$fastcgi_script_name;
                fastcgi_param HTTP_PROXY "";
                fastcgi_pass gamedo-fpm:9000;
                include fastcgi_params;
            }
            location / {
              try_files $uri $uri/ /index.php?$query_string;
            location ~* ^.+\.(jpg|jpeg|gif|png|svg|js|css|mp3|ogg|mpe?g|avi|zip|gz|bz2?|rar|swf)$ {
            expires 1d;
            }
          }
        }
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: game-do-app
  namespace: gamedo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: game-do-app
  template:
    metadata:
      labels:
        app: game-do-app
    spec:
      securityContext:
        fsGroup: 33
      initContainers:
        - name: migrator
          image: inthecage/game-do-app:${VERSION}
          envFrom:
            - secretRef:
                name: db-credentials
          imagePullPolicy: IfNotPresent
          command:
            - /bin/bash
            - -c
            - |
              set -e
              mkdir -p /var/www/html
              cp -r /var/www/* /app/
              export DB_HOST_ESCAPED=$(printf '%q' "$db_host")
              export DB_USERNAME_ESCAPED=$(printf '%q' "$db_username")
              export DB_PASSWORD_ESCAPED=$(printf '%q' "$db_password")
              sed -i "s|DB_HOST=.*|DB_HOST=${DB_HOST_ESCAPED}|; s|DB_USERNAME=.*|DB_USERNAME=${DB_USERNAME_ESCAPED}|; s|DB_PASSWORD=.*|DB_PASSWORD=${DB_PASSWORD_ESCAPED}|" /app/html/.env
          volumeMounts:
            - name: www
              mountPath: /app
      containers:
        - name: backend
          image: inthecage/game-do-app:${VERSION}
          imagePullPolicy: IfNotPresent
          command: ["/bin/bash", "/var/www/html/app_init.sh"]
          resources:
            requests:
              memory: "500Mi"
              cpu: "300m"
            limits:
              memory: "5Gi"
              cpu: "2000m"
          ports:
            - name: app
              containerPort: 9000
              protocol: TCP
          volumeMounts:
            - name: www
              mountPath: /var/www
            - name: php-ini
              mountPath: /usr/local/etc/php/php.ini
              subPath: php.ini
        - name: nginx
          image: nginx:latest
          imagePullPolicy: IfNotPresent
          resources:
            requests:
              memory: "500Mi"
              cpu: "200m"
            limits:
              memory: "1Gi"
              cpu: "500m"
          ports:
            - containerPort: 8092
              name: nginx
              protocol: TCP
          volumeMounts:
            - name: www
              mountPath: /var/www
            - name: nginx-conf
              mountPath: /etc/nginx/nginx.conf
              subPath: nginx.conf
        - name: postfix
          image: inthecage/postfix:latest
          ports:
            - name: postfix
              containerPort: 465
              protocol: TCP
          resources:
            requests:
              memory: "500Mi"
              cpu: "200m"
            limits:
              memory: "1Gi"
              cpu: "500m"
      imagePullSecrets:
        - name: dockerhub-credentials
      volumes:
        - name: www
          emptyDir: {}
        - name: nginx-conf
          configMap:
            defaultMode: 420
            items:
              - key: nginx.conf
                path: nginx.conf
            name: nginx-config
        - name: php-ini
          configMap:
            defaultMode: 420
            items:
              - key: php.ini
                path: php.ini
            name: php-ini
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: game-do-app
  name: game-do-service
  namespace: gamedo
spec:
  selector:
    app: game-do-app
  ports:
    - name: http
      port: 8092
      protocol: TCP
      targetPort: 8092
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: game-do-app
  name: gamedo-fpm
  namespace: gamedo
spec:
  selector:
    app: game-do-app
  ports:
    - name: app
      port: 9000
      targetPort: 9000
      protocol: TCP
---
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  name: letsencrypt-gamedo
  namespace: gamedo
spec:
  acme:
    server: https://acme-v02.api.letsencrypt.org/directory
    email: e@i7t.ru
    privateKeySecretRef:
      name: letsencrypt-airflow
    solvers:
      - http01:
          ingress:
            class: nginx
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: my-ingress
  namespace: gamedo
  annotations:
    kubernetes.io/ingress.class: "nginx"
spec:
  rules:
    - host: gamedo.mpbro.ru
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: game-do-service
                port:
                  number: 8092
  tls:
    - hosts:
        - gamedo.mpbro.ru
      secretName: gamedo-tls

